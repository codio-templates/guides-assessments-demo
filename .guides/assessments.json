[
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-4179884427",
  "source": {
   "name": "Fill in the blanks (show possible values)",
   "showName": true,
   "instructions": "Complete the definition.",
   "showValues": true,
   "text": "A prime number (or a prime) is a <<<natural>>> number greater than <<<1>>> that has no positive divisors other than <<<1 and itself>>>.",
   "distractors": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "points": 1,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Fill in the Blanks"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": "",
   "tokens": {
    "blank": [
     "natural",
     "1",
     "1 and itself"
    ],
    "text": [
     "A prime number (or a prime) is a ",
     0,
     " number greater than ",
     0,
     " that has no positive divisors other than ",
     0,
     "."
    ],
    "regexPositions": []
   }
  }
 },
 {
  "type": "fill-in-the-blanks",
  "taskId": "fill-in-the-blanks-539535015",
  "source": {
   "name": "Fill in the blanks (hide possible values)",
   "showName": true,
   "instructions": "How users can enter code with/without spacing using regular expression support.  `i==0` or `i == 0` can be entered",
   "text": "Enter code : <<</i ?== ?0/>>>",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "points": 100,
   "showValues": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Fill in the Blanks"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": "",
   "tokens": {
    "blank": [
     {
      "type": "regEx",
      "value": "/i ?== ?0/"
     }
    ],
    "text": [
     "Enter code : ",
     0
    ],
    "regexPositions": [
     0
    ]
   }
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-3362447361",
  "source": {
   "name": "MCQ with Multiple Responses ",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "Correct Answer: **1** & **4**",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "Which numbers are not primes?",
   "points": "1",
   "incorrectPoints": "0",
   "multipleResponse": true,
   "learningObjectives": "",
   "answers": [
    {
     "_id": "56e003bd40f757f006946549",
     "correct": true,
     "answer": "1"
    },
    {
     "_id": "56e003bd40f757f006946548",
     "correct": true,
     "answer": "4"
    },
    {
     "_id": "56e003bd40f757f006946547",
     "correct": false,
     "answer": "11"
    },
    {
     "_id": "56e003bd40f757f006946546",
     "correct": false,
     "answer": "37"
    }
   ]
  }
 },
 {
  "type": "multiple-choice",
  "taskId": "multiple-choice-3851013076",
  "source": {
   "name": "MCQ with Single Response",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "Correct Answer: **1**",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": true,
   "instructions": "Which number is not a prime?",
   "points": "1",
   "incorrectPoints": "0",
   "multipleResponse": false,
   "learningObjectives": "",
   "answers": [
    {
     "_id": "56e0037f89191cb269f5b60f",
     "correct": true,
     "answer": "1"
    },
    {
     "_id": "56e0037f89191cb269f5b60e",
     "correct": false,
     "answer": "2"
    },
    {
     "_id": "56e0037f89191cb269f5b60d",
     "correct": false,
     "answer": "11"
    }
   ]
  }
 },
 {
  "type": "test",
  "taskId": "test-1487677191",
  "source": {
   "name": "test2",
   "showName": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": false,
   "instructions": "Write a program that receives two numeric arguments, a and b, and outputs a single string with the value (a + b).",
   "command": "challenge2/framework-test.sh",
   "points": 1
  }
 },
 {
  "type": "test",
  "taskId": "test-1883631226",
  "source": {
   "name": "Advanced Test (bash)",
   "showName": false,
   "arePartialPointsAllowed": false,
   "oneTimeTest": false,
   "instructions": "Write a program that receives two numeric arguments, a and b, and outputs a single string with the value \"Hello World \" + (a + b).",
   "command": "challenge1/advanced-test.sh",
   "points": 1
  }
 },
 {
  "type": "test",
  "taskId": "test-3517184996",
  "source": {
   "name": "Unordered lists",
   "showName": true,
   "arePartialPointsAllowed": false,
   "oneTimeTest": false,
   "instructions": "Create an unordered list with 3 list items.",
   "command": "node challenge4/test4.js",
   "points": 1
  }
 },
 {
  "type": "test",
  "taskId": "test-857809534",
  "source": {
   "name": "JavaScript test using Mocha",
   "showName": true,
   "arePartialPointsAllowed": false,
   "oneTimeTest": false,
   "instructions": "JavaScript's Array.indexOf method should return -1 if no value is supplied. Complete the expected behaviour.",
   "command": "mocha challenge3/test3.js",
   "points": 1
  }
 },
 {
  "type": "test",
  "taskId": "test-4112607060",
  "source": {
   "name": "test c with python",
   "showName": true,
   "arePartialPointsAllowed": false,
   "oneTimeTest": false,
   "instructions": "Write a program that receives two numeric arguments, a and b, and outputs a single string with the value \"Hello World \" + (a + b).",
   "command": "python challenge5/test.py challenge5/challenge5.c",
   "points": 10
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-2313277420",
  "source": {
   "name": "Standard (argument)",
   "showName": false,
   "preExecuteCommand": "javac challenge1/Challenge.java",
   "command": "java -classpath challenge1 Challenge",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "",
   "options": {
    "ignoreCase": false,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "1 4",
     "input": "",
     "output": "Hello World 5"
    },
    {
     "arguments": "99 100",
     "input": "",
     "output": "Hello World 199"
    }
   ]
  }
 },
 {
  "type": "code-output-compare",
  "taskId": "code-output-compare-1758926380",
  "source": {
   "name": "Stdin",
   "showName": true,
   "preExecuteCommand": "javac stdin/AddNumbers.java",
   "command": "java -classpath stdin AddNumbers",
   "points": 1,
   "oneTimeTest": false,
   "instructions": "When you have tested your code and are happy with it, press the button below.",
   "options": {
    "ignoreCase": true,
    "ignoreWhitespaces": true,
    "ignoreNewline": true,
    "timeout": 30
   },
   "sequence": [
    {
     "arguments": "",
     "input": "1\n2",
     "output": "first number    :\nsecond number         :\ntotal:3.0"
    },
    {
     "arguments": "",
     "input": "1.456\n2",
     "output": "first number    :\nsecond number         :\ntotal:3.456"
    },
    {
     "arguments": "",
     "input": "100\n200",
     "output": "first number    :\nsecond number         :\ntotal:300.0"
    }
   ]
  }
 },
 {
  "type": "test",
  "taskId": "test-1592842204",
  "source": {
   "name": "Partial",
   "showName": false,
   "instructions": "Write some code that outputs a random number between 0 and 100. This is not really a valid test but a demo only to show how partial points works.",
   "command": "partial/partial-test.sh",
   "arePartialPointsAllowed": true,
   "timeoutSeconds": 40,
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "points": 100,
   "oneTimeTest": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Advanced Code Test"
     }
    ],
    "files": [
     "partial/Challenge.java",
     "partial/partial-test.sh"
    ],
    "opened": [
     {
      "type": "file",
      "panelNumber": 0,
      "content": "partial/Challenge.java"
     },
     {
      "type": "file",
      "panelNumber": 1,
      "content": "partial/partial-test.sh"
     }
    ]
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "free-text",
  "taskId": "free-text-432490137",
  "source": {
   "name": "Free Text Example",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "arePartialPointsAllowed": true,
   "oneTimeTest": false,
   "instructions": "Please describe in no more than 100 words the dangers of the **Dark Web**",
   "learningObjectives": "",
   "previewType": "NONE",
   "points": 20
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-2111061264",
  "source": {
   "name": "Line Based Grader",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "Drag the following blocks into the designated area so that the code outputs \"Hello World!\"",
   "points": "1",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "print(\"Hello\")\nprint(\" \")\nprint(\"World\")\nprint(\"!\")",
   "options": "{\n  \"sortableId\": \"sortable\",\n  \"trashId\": \"sortableTrash\",\n  \"max_wrong_lines\": 1,\n  \"feedback_cb\": \"displayErrors\",\n  \"can_indent\": false\n}",
   "grader": "1"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-1975006843",
  "source": {
   "name": "Turtle Triangle",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "Re order the commands so that the turtle draws a triangle",
   "points": "1",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "forward(100)\nleft(120)\nforward(100)\nleft(120)\nforward(100)\nleft(120)",
   "options": "{}",
   "grader": "5"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-1061393720",
  "source": {
   "name": "line based grader",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "ANSWER AND RATIONALE TO STUDENT",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "<p>Construct a function by drag&amp;dropping and reordering lines from the\n            left to the right.\n            The constructed function should return True if the parameter is True and\n            return False otherwise.</p>\n        <p><strong>Note:</strong> The correct solution is obviously a dumb way to do\n            it. This exercise is merely trying to give an example of a Parson's\n            puzzle with js-parsons, not teach you Python :)</p>",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "def is_true(boolean_value):\n  if boolean_value:\n    return True\n  return False\n  return true #distractor\n",
   "options": "{\n  \"sortableId\": \"sortable\",\n  \"trashId\": \"sortableTrash\",\n  \"max_wrong_lines\": 1\n}",
   "grader": "1"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-3617679223",
  "source": {
   "name": "Turtle Graphics Grader",
   "showName": true,
   "instructions": "Construct a program by dragging and dropping code blocks into the provided space.\n\nThe constructed program should draw a triangle as shown below.",
   "initial": "REPEAT 3 TIMES\n  forward(100)\n  left(120)\nENDREPEAT\n",
   "options": "{\"sortableId\":\"sortable\",\"trashId\":\"sortableTrash\",\"max_wrong_lines\":1,\"turtleModelCode\":\"modelTurtle.forward(100)\\nmodelTurtle.left(120)\\nmodelTurtle.forward(100)\\nmodelTurtle.left(120)\\nmodelTurtle.forward(100)\\nmodelTurtle.left(120)\",\"executable_code\":\"for i in range(0,3):\\nmyTurtle.forward(100)\\nmyTurtle.left(120)\\npass\",\"programmingLang\":\"pseudo\"}",
   "grader": "5",
   "guidance": "ANSWER AND RATIONALE TO STUDENT",
   "showGuidanceAfterResponse": false,
   "points": 10,
   "oneTimeTest": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Parsons Puzzle"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-2451163072",
  "source": {
   "name": "line based grader without indentation",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "ANSWER AND RATIONALE TO STUDENT",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "Construct a program that prints Hello Parsons problems!",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "print 'Hello'\nprint 'Parsons'\nprint 'problems!'",
   "options": "{\n                \"sortableId\": \"sortable\",\n                \"trashId\": \"sortableTrash\",\n                \"max_wrong_lines\": 1,\n                \"feedback_cb\" : \"displayErrors\",\n                \"can_indent\": false\n            }",
   "grader": "1"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-2025388301",
  "source": {
   "name": "Language Translation Grader",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "ANSWER AND RATIONALE TO STUDENT",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "Construct code by reordering and indenting the lines.",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "for (int i=0;i<3;i++) {\nSystem.out.print(\\\"I \\\");\nSystem.out.print(\\\"am \\\");\nSystem.out.print(\\\"a Java program \\\");\n}",
   "options": "{\n                \"sortableId\": \"sortable\",\n                \"max_wrong_lines\": 1,\n                \"vartests\": [{\"initcode\": \"output = ''\", \"code\": \"\", \"message\": \"Testing...\", \"variables\": {\"output\": \"I am a Java program I am a Java program I am a Java program \"}}\n                    ],\n                \"executable_code\": \"for x in range(3):\\noutput += 'I '\\noutput += 'am '\\noutput += 'a Java program '\\npass\\n\",\n                \"programmingLang\": \"java\"\n            }",
   "grader": "4"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-3785944520",
  "source": {
   "name": "language translation grader 2",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "ANSWER AND RATIONALE TO STUDENT",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "Construct a function by drag&amp;dropping and reordering lines from the\n            left to the right.\n            The constructed function should set the value of variable min to be the smaller of variables a and b.",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "IF $$toggle::a::b$$ $$toggle::<::>::<>$$ b THEN\n  min := a\nELSE\n  min := b\nENDIF",
   "options": "{\n                \"sortableId\": \"sortable\",\n                \"trashId\": \"sortableTrash\",\n                \"max_wrong_lines\": 1,\n                \"vartests\": [{\"initcode\": \"min = None\\na = 0\\nb = 2\", \"code\": \"\", \"message\": \"Testing with a = 0 ja b = 2\", \"variables\": {\"min\": 0}},\n                    {\"initcode\": \"min = None\\na = 7\\nb = 4\\n\", \"code\": \"\", \"message\": \"Testing with a = 7 ja b = 4\",\n                      \"variables\": {\"min\": 4}}],\n                \"executable_code\": \"if $$toggle$$ $$toggle::<::>::!=$$ b:\\nmin = a\\nelse:\\nmin = b\\n  pass\",\n                \"programmingLang\": \"pseudo\"\n            }",
   "grader": "4"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-4227875760",
  "source": {
   "name": "unit tests grader 1",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "ANSWER AND RATIONALE TO STUDENT",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "Construct a function which returns the largest of the three given arguments.\n      You can change the value of a toggleable element (<span class=\"jsparson-toggle\"></span>) by clicking.",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "def find_largest(a, b, c):\nif <span class='jsparson-toggle' data-type='abc'></span> > <span class='jsparson-toggle' data-type='abc'></span>:\nif <span class='jsparson-toggle' data-type='abc'></span> > <span class='jsparson-toggle' data-type='abc'></span>:\nreturn <span class='jsparson-toggle' data-type='abc'></span>\nelse:\nreturn <span class='jsparson-toggle' data-type='abc'></span>\nelif <span class='jsparson-toggle' data-type='abc'></span> > <span class='jsparson-toggle' data-type='abc'></span>:\nreturn <span class='jsparson-toggle' data-type='abc'></span>\nelse:\nreturn <span class='jsparson-toggle' data-type='abc'></span>\n",
   "options": "{\n                \"sortableId\": \"sortable\",\n                        \"trashId\": \"sortableTrash\",\n                        \"unittests\": \"import unittestparson\\nclass myTests(unittestparson.unittest):\\n  def testOne(self):\\n    self.assertEqual(find_largest(0, 2, 4),4,\\\"Calling function <code>find_largest(0, 2, 4)</code>.\\\")\\n    self.assertEqual(find_largest(4, 2, 4),4,\\\"Calling function <code>find_largest(4, 2, 4)</code>.\\\")\\n    self.assertEqual(find_largest(-5, -1, -4),-1,\\\"Calling function <code>find_largest(-5, -1, -4)</code>.\\\")\\n    self.assertEqual(find_largest(7, 2, 4),7,\\\"Calling function <code>find_largest(7, 2, 4)</code>.\\\")\\n_test_result = myTests().main()\",\n                        \"toggleTypeHandlers\": {\"abc\": [\"a\", \"b\", \"c\"]}\n            }",
   "grader": "3"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-2614592583",
  "source": {
   "name": "Variable Check Grader",
   "showName": true,
   "instructions": "Construct a program that swaps the values of variables <code>x</code> and <code>y</code> using the helper variable <code>tmp</code>. You can change the names of the variables (<span class=\"jsparson-toggle\"></span>) by clicking them.",
   "initial": "$$toggle::x::y::tmp$$ = $$toggle::x::y::tmp$$\n$$toggle::x::y::tmp$$ = $$toggle::x::y::tmp$$\n$$toggle::x::y::tmp$$ = $$toggle::x::y::tmp$$\n",
   "options": "{\"sortableId\":\"sortable\",\"trashId\":\"sortableTrash\",\"vartests\":[{\"initcode\":\"x = 0\\ny=2\",\"code\":\"\",\"message\":\"Testing with initial variable values x = 0 and y = 2\",\"variables\":{\"x\":2}},{\"initcode\":\"x = 3\\ny=4\\n\",\"code\":\"\",\"message\":\"Testing with initial variable values x = 3 and y = 4\",\"variables\":{\"x\":4,\"y\":3}}],\"lang\":\"en\"}",
   "grader": "2",
   "guidance": "ANSWER AND RATIONALE TO STUDENT",
   "showGuidanceAfterResponse": false,
   "points": 10,
   "oneTimeTest": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Parsons Puzzle"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-4136203886",
  "source": {
   "name": "Unit Tests Grader",
   "showName": true,
   "instructions": "Your task is to construct a function which returns the index of the largest element in the array.",
   "initial": "def maxindex(arg):\n ans = 0\n for i in range(len(arg)):\n if arg[i] > arg[ans]:\n ans = i\n while True:\npass\n return ans\n",
   "options": "{\"sortableId\":\"sortable\",\"trashId\":\"sortableTrash\",\"unittests\":\"import unittestparson\\nclass myTests(unittestparson.unittest):\\n  def testOne(self):\\n    self.assertEqual(maxindex([0, 2, 4]),2,\\\"Calling function <code>maxindex([0, 2, 4])</code>.\\\")\\n    self.assertEqual(maxindex([7, 2, 4]),0,\\\"Calling function <code>maxindex([7, 2, 4])</code>.\\\")\\n    self.assertEqual(maxindex([7, 8, 4]),1,\\\"Calling function <code>maxindex([7, 8, 4])</code>.\\\")\\n  def testTwo(self):\\n    self.assertEqual(maxindex([0, 2, 4]),2,\\\"Calling function <code>maxindex([0, 2, 4])</code>.\\\")\\n    self.assertEqual(maxindex([7, 2, 4]),0,\\\"Calling function <code>maxindex([7, 2, 4])</code>.\\\")\\n    self.assertEqual(maxindex([7, 8, 4]),1,\\\"Calling function <code>maxindex([7, 8, 4])</code>.\\\")\\n_test_result = myTests().main()\"}",
   "grader": "3",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "points": 10,
   "oneTimeTest": false,
   "metadata": {
    "tags": [
     {
      "name": "Assessment Type",
      "value": "Parsons Puzzle"
     }
    ],
    "files": [],
    "opened": []
   },
   "bloomsObjectiveLevel": "",
   "learningObjectives": ""
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-3698586264",
  "source": {
   "name": "turtle 2",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "test",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "REPEAT 4 TIMES\n  forward(50)\n  left(90)\nENDREPEAT\n",
   "options": "{\n  \"sortableId\": \"sortable\",\n  \"trashId\": \"sortableTrash\",\n  \"max_wrong_lines\": 1,\n  \"turtleModelCode\": \"modelTurtle.forward(50)\\nmodelTurtle.left(90)\\nmodelTurtle.forward(50)\\nmodelTurtle.left(90)\\nmodelTurtle.forward(50)\\nmodelTurtle.left(90)\\nmodelTurtle.forward(50)\\nmodelTurtle.left(90)\",\n  \"executable_code\": \"for i in range(0,4):\\nmyTurtle.forward(50)\\nmyTurtle.left(90)\\npass\",\n  \"programmingLang\": \"pseudo\"\n}",
   "grader": "5"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-23456077",
  "source": {
   "name": "turtle 3",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "test",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "REPEAT 6 TIMES\n  forward(50)\n  left(60)\nENDREPEAT\n",
   "options": "{\n  \"sortableId\": \"sortable\",\n  \"trashId\": \"sortableTrash\",\n  \"max_wrong_lines\": 1,\n  \"turtleModelCode\": \"modelTurtle.forward(50)\\nmodelTurtle.left(60)\\nmodelTurtle.forward(50)\\nmodelTurtle.left(60)\\nmodelTurtle.forward(50)\\nmodelTurtle.left(60)\\nmodelTurtle.forward(50)\\nmodelTurtle.left(60)\\nmodelTurtle.forward(50)\\nmodelTurtle.left(60)\\nmodelTurtle.forward(50)\\nmodelTurtle.left(60)\",\n  \"executable_code\": \"for i in range(0,6):\\nmyTurtle.forward(50)\\nmyTurtle.left(60)\\npass\",\n  \"programmingLang\": \"pseudo\"\n}",
   "grader": "5"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-3464569959",
  "source": {
   "name": "linebased3",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "test\n\n",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "1\n22\n333\n4444\n55555",
   "options": "{ \n  \"sortableId\": \"sortable\",\n  \"trashId\": \"sortableTrash\",\n  \"max_wrong_lines\": 1,\n  \"feedback_cb\" : \"displayErrors\",\n  \"can_indent\": false\n  \n  \n}",
   "grader": "1"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-2637734413",
  "source": {
   "name": "linebased 4",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "test",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "0 indents\n 1 indent\n  2 indents\n   3 indents\n    4  indents\n",
   "options": "{\n  \"sortableId\": \"sortable\",\n  \"trashId\": \"sortableTrash\",\n  \"max_wrong_lines\": 1\n}",
   "grader": "1"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-4105711196",
  "source": {
   "name": "variable 2",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "Construct a program that swaps the values of variables <code>x</code> and <code>y</code> using the\n  helper variable <code>z</code>. You can change the names of the variables (<span class=\"jsparson-toggle\"></span>)\n  by clicking them.",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "$$toggle::x::y::z$$ = $$toggle::x::y::z$$ + $$toggle::x::y::z$$\n$$toggle::x::y::z$$ = $$toggle::x::y::z$$ - $$toggle::x::y::z$$\n$$toggle::x::y::z$$ = $$toggle::x::y::z$$ -$$toggle::x::y::z$$\n",
   "options": "{\n      \"sortableId\": \"sortable\",\n      \"trashId\": \"sortableTrash\",\n      \"vartests\": [{\"initcode\": \"x = 1\\ny=2\", \"code\": \"\", \"message\": \"Testing with initial variable values x = 1 and y = 2\", \"variables\": {\"z\": 3, \"x\": 2, \"y\": 1}},\n                   {\"initcode\": \"x = 3\\ny=4\\n\", \"code\": \"\", \"message\": \"Testing with initial variable values x = 3 and y = 4\", \"variables\": {\"z\": 7, \"x\": 4, \"y\": 3}}],\n      \"lang\": \"en\"\n    }",
   "grader": "2"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-1813902282",
  "source": {
   "name": "language translation grader 3",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "test",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "for (int i=0;i<3;i++) {\nSystem.out.print(\\\"111 \\\");\nSystem.out.print(\\\"222 \\\");\nSystem.out.print(\\\"333 \\\");\n}",
   "options": "{\n                \"sortableId\": \"sortable\",\n                \"max_wrong_lines\": 1,\n                \"vartests\": [{\"initcode\": \"output = ''\", \"code\": \"\", \"message\": \"Testing...\", \"variables\": {\"output\": \"111 222 333 111 222 333 111 222 333 \"}}\n                    ],\n                \"executable_code\": \"for x in range(3):\\noutput += '111 '\\noutput += '222 '\\noutput += '333 '\\npass\\n\",\n                \"programmingLang\": \"java\"\n            }",
   "grader": "4"
  }
 },
 {
  "type": "parsons-puzzle",
  "taskId": "parsons-puzzle-1712466135",
  "source": {
   "name": "language translation grader 4",
   "showName": true,
   "bloomsObjectiveLevel": "",
   "guidance": "",
   "showGuidanceAfterResponse": false,
   "showExpectedAnswer": false,
   "instructions": "Construct a function by drag&amp;dropping and reordering lines from the left to the right. \nThe constructed function should set the value of variable sum of variables a and b.",
   "points": "10",
   "learningObjectives": "",
   "oneTimeTest": false,
   "initial": "IF $$toggle::a::b$$ $$toggle::<::>$$ $$toggle::a::b$$ THEN\n  sum:= a - b\nELSE\n  sum:= a + b\nENDIF",
   "options": "{\n                \"sortableId\": \"sortable\",\n                \"trashId\": \"sortableTrash\",\n                \"max_wrong_lines\": 1,\n                \"vartests\": [{\"initcode\": \"min = None\\na = 0\\nb = 2\", \"code\": \"\", \"message\": \"Testing with a = 0 ja b = 2\", \"variables\": {\"sum\": 2}},\n                    {\"initcode\": \"min = None\\na = 7\\nb = 4\\n\", \"code\": \"\", \"message\": \"Testing with a = 7 ja b = 4\",\n                      \"variables\": {\"sum\": 3}}],\n                \"executable_code\": \"if $$toggle$$ $$toggle::<::>$$ b:\\nsum = a - b\\nelse:\\nsum = a + b\\n  pass\",\n                \"programmingLang\": \"pseudo\"\n            }",
   "grader": "4"
  }
 }
]